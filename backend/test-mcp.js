const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

async function testMCP() {
  console.log('üöÄ Testing MCP functionality...\n');

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    console.log('1. Importing MCP configuration...');
    const mcpConfig = {
      "mcpServers": {
        "sequential-thinking": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-sequential-thinking"
          ]
        },
        "filesystem": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-filesystem",
            "/"
          ]
        },
        "server-cmd": {
          "command": "node",
          "args": [
            "C:/mcp/PhialsBasement_CMD-MCP-Server/dist/index.js"
          ]
        },
        "browser-mcp": {
          "command": "npx",
          "args": [
            "@browsermcp/mcp"
          ]
        }
      }
    };

    const importResponse = await axios.post(`${API_BASE}/mcp/import-config`, mcpConfig);
    console.log('‚úÖ MCP config imported:', importResponse.data);

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
    console.log('\n2. Getting MCP servers...');
    const serversResponse = await axios.get(`${API_BASE}/mcp`);
    console.log('‚úÖ MCP servers:', serversResponse.data);

    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–µ—Ä–≤–µ—Ä–æ–≤
    if (serversResponse.data.length > 0) {
      const serverId = serversResponse.data[0].id;
      console.log(`\n3. Starting MCP server ${serverId}...`);
      
      try {
        const startResponse = await axios.post(`${API_BASE}/mcp/${serverId}/start`);
        console.log('‚úÖ Server started:', startResponse.data);

        // –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É –≤—Ä–µ–º—è –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        await new Promise(resolve => setTimeout(resolve, 2000));

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        console.log(`\n4. Getting tools from server ${serverId}...`);
        try {
          const toolsResponse = await axios.get(`${API_BASE}/mcp/${serverId}/tools`);
          console.log('‚úÖ Tools:', toolsResponse.data);
        } catch (error) {
          console.log('‚ùå Getting tools failed:', error.response?.data || error.message);
        }

      } catch (error) {
        console.log('‚ùå Server start failed:', error.response?.data || error.message);
      }
    }

  } catch (error) {
    console.error('‚ùå MCP Test failed:', error.response?.data || error.message);
  }
}

testMCP();
